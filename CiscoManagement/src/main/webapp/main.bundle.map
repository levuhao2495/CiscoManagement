{"version":3,"sources":["webpack:///./src/app/service/device.service.ts","webpack:///./src/app/service/vlan.service.ts","webpack:///./src/app/service/port.service.ts","webpack:///./src/app/device/adddevice/adddevice.component.ts","webpack:///./src/app/device/device.component.ts","webpack:///./src/app/device/editdevice/editdevice.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/port/port-of-iddevice/port-of-iddevice.component.ts","webpack:///./src/app/port/port.component.ts","webpack:///./src/app/vlan/addvlan/addvlan.component.ts","webpack:///./src/app/vlan/vlan.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/vlan/editvlan/editvlan.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/device/adddevice/adddevice.component.css","webpack:///./src/app/device/device.component.css","webpack:///./src/app/device/editdevice/editdevice.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/port/port-of-iddevice/port-of-iddevice.component.css","webpack:///./src/app/port/port.component.css","webpack:///./src/app/vlan/addvlan/addvlan.component.css","webpack:///./src/app/vlan/editvlan/editvlan.component.css","webpack:///./src/app/vlan/vlan.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/device/adddevice/adddevice.component.html","webpack:///./src/app/device/device.component.html","webpack:///./src/app/device/editdevice/editdevice.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/port/port-of-iddevice/port-of-iddevice.component.html","webpack:///./src/app/port/port.component.html","webpack:///./src/app/vlan/addvlan/addvlan.component.html","webpack:///./src/app/vlan/editvlan/editvlan.component.html","webpack:///./src/app/vlan/vlan.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Http,Headers,Response,RequestOptions } from '@angular/http';\n \nimport 'rxjs/Rx';\nimport { Device } from \"app/device/device\";\n\n@Injectable()\nexport class DeviceService {\n\n        constructor(private _http:Http) { }\n        \n        getAllDevices(){\n        \n            return this._http.get('/apidevice/device')\n            \n            .map((response:Response)=>response.json());\n        \n        }\n        \n        getDeviceId(deviceid:any){\n        \n            return this._http.get('/apidevice/device/'+deviceid)\n            \n            .map((response:Response)=>response.json());\n        \n        }\n\n        addDevice(item:Device){\n            \n            let body = JSON.stringify(item);\n            \n            let headers = new Headers({ 'Content-Type': 'application/json' });\n            \n            let options = new RequestOptions({ headers: headers });\n            \n            return this._http.post('/apidevice/device',body, options)\n            \n            .map((response:Response)=>response.json());\n            \n        }\n            \n        \n        deleteDevice(deviceid){\n        \n            let headers = new Headers({ 'Content-Type': 'application/json' });\n            \n            let options = new RequestOptions({ headers: headers });\n            \n            return this._http.delete('/apidevice/device/'+deviceid,options)\n            .map((response:Response)=>response.json());\n            \n        }\n        \n        \n        \n        \n        \n        editDevice(item:Device){\n        \n            let body = JSON.stringify(item);\n            let headers = new Headers({ 'Content-Type': 'application/json' });\n            let options = new RequestOptions({ headers: headers });\n            return this._http.put('/apidevice/device/'+item.deviceid, body, options)\n            .map((response:Response)=>response.json());\n            \n        }\n\n} \n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/device.service.ts","import { Injectable } from '@angular/core';\nimport {Vlan} from '../vlan/vlan';\n\nimport { Http,Headers,Response,RequestOptions } from '@angular/http';\n \nimport 'rxjs/Rx';\n\n@Injectable()\nexport class VlanService {\n\n\n \n        constructor(private _http:Http) { }\n        \n        getAllVlans(){\n        \n            return this._http.get('/apivlan/vlan')\n            \n            .map((response:Response)=>response.json());\n        \n        }\n        \n        getVlanId(vlanId:any){\n        \n            return this._http.get('/apivlan/vlan/'+vlanId)\n            \n            .map((response:Response)=>response.json());\n        \n        }\n\n        addVlan(item:Vlan){\n            \n            let body = JSON.stringify(item);\n            \n            let headers = new Headers({ 'Content-Type': 'application/json' });\n            \n            let options = new RequestOptions({ headers: headers });\n            \n            return this._http.post('/apivlan/vlan',body, options)\n            \n            .map((response:Response)=>response.json());\n            \n        }\n            \n    /*    \n        deleteVlan(vlanid){\n        \n            let headers = new Headers({ 'Content-Type': 'application/json' });\n            \n            let options = new RequestOptions({ headers: headers });\n            \n            return this._http.delete('/apivlan/vlan/'+vlanid,options)\n            .map((response:Response)=>response.json());\n        }\n        \n        \n        \n        \n     editVlan(item:Vlan){\n        \n            let body = JSON.stringify(item);\n            let headers = new Headers({ 'Content-Type': 'application/json' });\n            let options = new RequestOptions({ headers: headers });\n            return this._http.put('/apivlan/vlan/'+item.vlanId, body, options)\n            .map((response:Response)=>response.json());\n            \n        }*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/vlan.service.ts","import { Injectable } from '@angular/core';\nimport { Http,Headers,Response,RequestOptions } from '@angular/http';\nimport \"rxjs/Rx\";\n\n@Injectable()\nexport class PortService {\n\n  constructor(private _http:Http) { }\n        \n        getAllPorts(){\n        \n            return this._http.get('/apiport/port')\n            \n            .map((response:Response)=>response.json());\n        \n        }\n        \n        getPortId(iddevice:any){\n        \n            return this._http.get('/apiport/port/'+iddevice)\n            \n            .map((response:Response)=>response.json());\n        \n        }\n\n\n        deletePort(portid:any){\n        \n            let headers = new Headers({ 'Content-Type': 'application/json' });\n            \n            let options = new RequestOptions({ headers: headers });\n            \n            return this._http.delete('/apiport/deleteport/'+portid,options)\n            .map((response:Response)=>response.json());\n            \n        }\n        \n        \n        \n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/port.service.ts","import { Component, OnInit } from '@angular/core';\nimport { DeviceService } from \"app/service/device.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-adddevice',\n  templateUrl: './adddevice.component.html',\n  styleUrls: ['./adddevice.component.css']\n})\nexport class AdddeviceComponent implements OnInit {\n\n  modeldevice = {deviceid:0,ip:'',mac:'',name:'', type:1, version:'', snmpv:'', snmpr:'', snmpw:''};\n    \n    constructor(private _devicedata:DeviceService,private _router:Router) {}\n    \n    ngOnInit() {\n    \n    }\n    \n    addDevice() {\n    \n        this._devicedata.addDevice(this.modeldevice)\n            .subscribe(\n            \n                (data:any)=>{\n                    \n                    console.log(data);\n                    \n                    this._router.navigate(['/allDevice']);\n                \n                },\n          \n                function(error){\n                \n                    console.log(error);\n                \n                },\n                \n                function(){\n                \n                  console.log('complete');\n            \n                }\n    \n            );\n    \n    }\n    \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/device/adddevice/adddevice.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Device } from \"app/device/device\";\nimport { DeviceService } from \"app/service/device.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n\n\n@Component({\n  selector: 'app-device',\n  templateUrl: './device.component.html',\n  styleUrls: ['./device.component.css']\n})\nexport class DeviceComponent implements OnInit {\nallDevices:Device[]=[];\n \nconstructor(private _datadevice:DeviceService, private _router:Router) { }\n \n ngOnInit() {\n \n    this._datadevice.getAllDevices()\n    .subscribe(\n    \n        (data: Device[]) => {\n        \n          this.allDevices = data;\n        \n        }\n    \n    );\n\n \n}\n\n  deleteDevice(item:Device){\n      if (confirm(\"Are you sure you want to delete device \" + item.name + \"?\")) {\n        \n            this._datadevice.deleteDevice(item.deviceid)\n            \n            .subscribe(\n            \n                  (data:any)=>{\n                  \n                    this.allDevices.splice(this.allDevices.indexOf(item),1);\n                    this._router.navigate(['/allDevice']);\n                  },\n                  \n                  function(error){\n                  \n                    console.log(error);\n                  \n                  },\n                  \n                  function(){\n                  \n                    console.log('complete');\n                  \n                  }\n            \n            );\n      }\n        \n  }\n\n\n//Chuc nang xoa Device va luon Port cua Device\n /*   deletePort(item:Port){\n  if (confirm(\"Are you sure you want to delete port \" + item.port + \"?\")) {\n    \n        this._dataport.deletePort(item.portid)\n        \n        .subscribe(\n        \n              (data:any)=>{\n              \n                this.allPorts.splice(this.allPorts.indexOf(item),1);\n                this._router.navigate(['/allPort']);\n              },\n              \n              function(error){\n              \n                console.log(error);\n              \n              },\n              \n              function(){\n              \n                console.log('complete');\n              \n              }\n        \n        );\n  }\n        \n  }*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/device/device.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DeviceService } from \"app/service/device.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n//import { Device } from \"app/device/device\";\n\n@Component({\n  selector: 'app-editdevice',\n  templateUrl: './editdevice.component.html',\n  styleUrls: ['./editdevice.component.css']\n})\nexport class EditdeviceComponent implements OnInit {\n\n allDevicesId = {deviceid:0,ip:'',mac:'',name:'', type:0, version:'', snmpv:'', snmpr:'', snmpw:''};\n\n\n  constructor(private _devicedata: DeviceService, private router: Router, private routeactive: ActivatedRoute) { }\n\n  ngOnInit() {\n  \n            this.getDeviceID(this.routeactive.snapshot.params['deviceid']);\n    }\n\n  getDeviceID(deviceid){\n        this._devicedata.getDeviceId(deviceid)\n        .subscribe(\n            (data:any)=>{\n            this.allDevicesId=data\n        },\n        function(error){\n                \n                    console.log(error);\n                \n        },\n        \n        function(){\n                \n                  console.log('complete');\n            \n        }\n        \n        )\n  }\n\n  updateDevice() {\n    \n      this._devicedata.editDevice(this.allDevicesId)\n            .subscribe(\n            \n                (data:any)=>{\n                    \n                    console.log(data);\n                    \n                    \n                    this.router.navigate(['/allDevice']);\n                \n                },\n          \n                function(error){\n                \n                    console.log(error);\n                \n                },\n                \n                function(){\n                \n                  console.log('complete');\n            \n                }\n    \n            );\n    \n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/device/editdevice/editdevice.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Port } from \"app/port/port\";\nimport { PortService } from \"app/service/port.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-port-of-iddevice',\n  templateUrl: './port-of-iddevice.component.html',\n  styleUrls: ['./port-of-iddevice.component.css']\n})\nexport class PortOfIddeviceComponent implements OnInit {\n\n  allPortOfDevice:Port[]=[];\n  //allPortOfDevice={portid:0, port:'', status:1, iddevice:1};\n\nconstructor(private _dataport: PortService, private routeactive:ActivatedRoute, private _router:Router) { }\n\n  ngOnInit() {\n        \n        this.getPortOfDevice(this.routeactive.snapshot.params['iddevice']);\n        \n  }\n  //Get Port of Device\n        getPortOfDevice(iddevice){\n          this._dataport.getPortId(iddevice)\n          .subscribe(\n              (data:Port[])=>{\n                  this.allPortOfDevice=data;\n              },\n              function(error){\n                      \n                          console.log(error);\n                      \n              },\n              \n              function(){\n                      \n                        console.log('complete');\n                  \n              }\n              \n              \n          )\n        }\n\n        //Chuc nang xoa Device va luon Port cua Device\n    deletePort(item:Port){\n  if (confirm(\"Are you sure you want to delete port \" + item.port + \"?\")) {\n    \n        this._dataport.deletePort(item.portid)\n        \n        .subscribe(\n        \n              (data:any)=>{\n              \n                this.allPortOfDevice.splice(this.allPortOfDevice.indexOf(item),1);\n                this._router.navigate(['/allPort']);\n              },\n              \n              function(error){\n              \n                console.log(error);\n              \n              },\n              \n              function(){\n              \n                console.log('complete');\n              \n              }\n        \n        );\n  }\n        \n  }\n\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/port/port-of-iddevice/port-of-iddevice.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Port } from \"app/port/port\";\nimport { Router } from \"@angular/router\";\nimport { PortService } from \"app/service/port.service\";\n\n@Component({\n  selector: 'app-port',\n  templateUrl: './port.component.html',\n  styleUrls: ['./port.component.css']\n})\nexport class PortComponent implements OnInit {\n\nallPorts:Port[]=[];\n \nconstructor(private _dataport:PortService, private _router:Router) { }\n \n ngOnInit() {\n \n    this._dataport.getAllPorts()\n    .subscribe(\n    \n        (data: Port[]) => {\n        \n          this.allPorts = data;\n        \n        }\n    \n    );\n \n}\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/port/port.component.ts","import { Component, OnInit } from '@angular/core';\nimport { VlanService } from \"app/service/vlan.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-addvlan',\n  templateUrl: './addvlan.component.html',\n  styleUrls: ['./addvlan.component.css']\n})\nexport class AddvlanComponent implements OnInit {\nmodel = {vlanId:0,vlanNumber:0,vlanDescription:'',vlanType:''};\n    \n    constructor(private _vlandata:VlanService,private _router:Router) {}\n    \n    ngOnInit() {\n    \n    }\n    \n    vlanSubmit() {\n    \n        this._vlandata.addVlan(this.model)\n            .subscribe(\n            \n                (data:any)=>{\n                    \n                    console.log(data);\n                    \n                    this._router.navigate(['/allVlan']);\n                \n                },\n          \n                function(error){\n                \n                    console.log(error);\n                \n                },\n                \n                function(){\n                \n                  console.log('complete');\n            \n                }\n    \n            );\n    \n    }\n    \n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vlan/addvlan/addvlan.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport{Vlan} from './vlan';\nimport{VlanService} from '../service/vlan.service';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {EditvlanComponent} from './editvlan/editvlan.component';\n\n@Component({\n  selector: 'app-vlan',\n  templateUrl: './vlan.component.html',\n  styleUrls: ['./vlan.component.css']\n})\nexport class VlanComponent implements OnInit {\n  \n \n\n  //Bien luu tru tat thong tin tu csdl gui ve va duoc truy xuat trong file html\n  allVlans:Vlan[]=[];\n  constructor(private _dataVlan:VlanService, private _router:Router) {}\n\n  ngOnInit() {\n    this._dataVlan.getAllVlans().subscribe(\n\n        (data: Vlan[]) =>{\n          this.allVlans= data\n        }\n    )\n}\n \n/*  deleteVlan(item){\n  if (confirm(\"Are you sure you want to delete vlan \" + item.vlannum + \"?\")) {\n        this._dataVlan.deleteVlan(item.vlanid)\n        \n        .subscribe(\n        \n              (data:any)=>{\n              \n                this.allVlans.splice(this.allVlans.indexOf(item),1);\n                this._router.navigate(['/allVlan']);\n              },\n              \n              function(error){\n              \n                console.log(error);\n              \n              },\n              \n              function(){\n              \n                console.log('complete');\n              \n              }\n        \n        );\n  }\n        \n    }*/\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/vlan/vlan.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 437;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 437\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n \n})\nexport class AppComponent {\ntitle= \"WELCOME TO WEB CISCO DEVICE MANAGEMENT\";\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent  } from './app.component';\nimport { VlanComponent } from './vlan/vlan.component';\n\nimport { DeviceComponent } from './device/device.component';\nimport { HomeComponent } from './home/home.component';\n\n\nimport {VlanService} from './service/vlan.service';\nimport { DeviceService } from \"app/service/device.service\";\nimport { PortService } from \"app/service/port.service\";\n \nimport{routes} from './app.routing';\n\n\nimport { EditvlanComponent } from './vlan/editvlan/editvlan.component';\nimport { AddvlanComponent } from './vlan/addvlan/addvlan.component';\n \n\nimport { AdddeviceComponent } from './device/adddevice/adddevice.component';\nimport { EditdeviceComponent } from './device/editdevice/editdevice.component';\n\nimport { LocationStrategy, HashLocationStrategy } from \"@angular/common\";\nimport { PortComponent } from './port/port.component';\nimport { PortOfIddeviceComponent } from \"app/port/port-of-iddevice/port-of-iddevice.component\";\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VlanComponent,\n    \n    DeviceComponent,\n    HomeComponent,\n    \n    AdddeviceComponent,\n    EditdeviceComponent,\n\n    EditvlanComponent,\n    AddvlanComponent,\n    PortComponent,\n   \n    PortOfIddeviceComponent,\n   \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routes\n    ],\n  providers: [DeviceService,VlanService,PortService,\n              //To prevent error 404 add this import\n              {provide: LocationStrategy, useClass: HashLocationStrategy}\n              ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes,RouterModule } from '@angular/router';\r\nimport { HomeComponent } from \"app/home/home.component\";\r\nimport { DeviceComponent } from \"app/device/device.component\";\r\nimport { AdddeviceComponent } from \"app/device/adddevice/adddevice.component\";\r\nimport { EditdeviceComponent } from \"app/device/editdevice/editdevice.component\";\r\n\r\nimport { VlanComponent } from './vlan/vlan.component';\r\nimport { EditvlanComponent } from \"app/vlan/editvlan/editvlan.component\";\r\nimport { AddvlanComponent } from \"app/vlan/addvlan/addvlan.component\";\r\n\r\nimport { PortComponent } from \"app/port/port.component\";\r\nimport { PortOfIddeviceComponent } from \"app/port/port-of-iddevice/port-of-iddevice.component\";\r\n/*import { PortOfIddeviceComponent } from \"app/port/port-of-iddevice/port-of-iddevice.component\";*/\r\n\r\n\r\nconst router:Routes=[\r\n \r\n{path:'',redirectTo:'/home',pathMatch:'full'},\r\n\r\n{path:'home',component:HomeComponent },\r\n \r\n{path:'allVlan',component:VlanComponent },\r\n\r\n{path:'addVlan',component:AddvlanComponent},\r\n\r\n//{path:'editVlan/:vlanid',component:EditvlanComponent},\r\n\r\n\r\n{path:'allPort',component:PortComponent},\r\n{path:'PortOfIddevice/:iddevice',component:PortOfIddeviceComponent},\r\n\r\n\r\n\r\n{path:'allDevice',component:DeviceComponent},\r\n\r\n{path:'addDevice',component:AdddeviceComponent},\r\n\r\n{path:'editDevice/:deviceid',component:EditdeviceComponent}\r\n];\r\n \r\nexport const routes=RouterModule.forRoot(router);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { VlanService } from \"app/service/vlan.service\";\nimport { Vlan } from \"app/vlan/vlan\";\n\n@Component({\n  selector: 'app-editvlan',\n  templateUrl: './editvlan.component.html',\n  styleUrls: ['./editvlan.component.css']\n})\nexport class EditvlanComponent implements OnInit {\n\n  allVlansId={vlanid:0,vlannum:0,vlanDct:'',vlanType:''};\n\n  constructor(private _vlandata: VlanService, private router: Router, private routeactive: ActivatedRoute) { }\n\n  ngOnInit() {\n  \n            this.getVlanID(this.routeactive.snapshot.params['vlanid']);\n    }\n\n  getVlanID(vlanid){\n        this._vlandata.getVlanId(vlanid)\n        .subscribe(\n            (data:any)=>{\n            this.allVlansId=data\n        },\n        function(error){\n                \n                    console.log(error);\n                \n        },\n        \n        function(){\n                \n                  console.log('complete');\n            \n        }\n        \n        )\n  }\n/*\n  updateVlan() {\n    \n      this._vlandata.editVlan(this.allVlansId)\n            .subscribe(\n            \n                (data:any)=>{\n                    \n                    console.log(data);\n                    \n                    \n                    this.router.navigate(['/allVlan']);\n                \n                },\n          \n                function(error){\n                \n                    console.log(error);\n                \n                },\n                \n                function(){\n                \n                  console.log('complete');\n            \n                }\n    \n            );\n    \n    }*/\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/vlan/editvlan/editvlan.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"div.header{\\r\\n    text-align: center;\\r\\n    color:Blue;\\r\\n}\\r\\ndiv.footer{\\r\\n    text-align: center;\\r\\n    color: lightslategrey;\\r\\n    }\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 713\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/device/adddevice/adddevice.component.css\n// module id = 714\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/device/device.component.css\n// module id = 715\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/device/editdevice/editdevice.component.css\n// module id = 716\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 717\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/port/port-of-iddevice/port-of-iddevice.component.css\n// module id = 718\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/port/port.component.css\n// module id = 719\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/vlan/addvlan/addvlan.component.css\n// module id = 720\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/vlan/editvlan/editvlan.component.css\n// module id = 721\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/vlan/vlan.component.css\n// module id = 722\n// module chunks = 1","module.exports = \"<div class=header>\\n<h1>\\n        {{title}}\\n</h1>\\n</div>\\n<div class=header>\\n    <nav>   \\n            <a [routerLink]=\\\"['/allDevice']\\\">DEVICE INFORMATION</a>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;\\n\\n            <a [routerLink]=\\\"['/allVlan']\\\">VLAN INFORMATION</a>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;\\n\\n            <a [routerLink]=\\\"['/allPort']\\\">PORT INFORMATION</a>\\n\\n        </nav>\\n</div>\\n        <router-outlet></router-outlet>\\n\\n\\n<br/><br/> <br/> <br/> <br/> <br/> <br/> <br/> <br/> <br/> <br/> <br/> <br/> <br/>  <br/> <br/> <br/> <br/> <br/> <br/> <br/>       \\n<hr/>\\n<div class=\\\"footer\\\">Designed by HHT</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 723\n// module chunks = 1","module.exports = \"\\t\\t<div class=\\\"container\\\">\\n\\t\\t\\n\\t\\t<form (ngSubmit)=\\\"addDevice()\\\" #addform=\\\"ngForm\\\">\\n      \\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"ip\\\">IP</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"modeldevice.ip\\\"\\n\\t\\t\\tname=\\\"ip\\\" \\n\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"ip\\\"\\n\\n\\t\\t\\trequired #ip=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"ip.valid || ip.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*IP is required\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"mac\\\">MAC</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"modeldevice.mac\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"mac\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"mac\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #mac=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"mac.valid || mac.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t*Mac is required\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t&nbsp;\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"modeldevice.name\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"name\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"name\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #name=\\\"ngModel\\\">\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"name.valid || name.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t*Name is required\\n\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"type\\\">Type</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"modeldevice.type\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"type\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"type\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #type=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"type.valid || type.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*Type is required\\n\\t\\t\\t\\n\\t\\t</div>\\n    \\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"version\\\">Version</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"modeldevice.version\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"version\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"version\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #version=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"version.valid || version.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*Version is required\\n\\t\\t\\t\\n\\t\\t</div>\\n    \\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"snmpv\\\">SNMP Version</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"modeldevice.snmpv\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"snmpv\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"snmpv\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #snmpv=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"snmpv.valid || snmpv.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*SNMP Version is required\\n\\t\\t\\t\\n\\t\\t</div>\\n    \\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"snmpr\\\">SNMP Read</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"modeldevice.snmpr\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"snmpr\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"snmpr\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #snmpr=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"snmpr.valid || snmpr.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*SNMP Read is required\\n\\t\\t\\t\\n\\t\\t</div>\\n    \\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"snmpw\\\">SNMP Write</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"modeldevice.snmpw\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"snmpw\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"snmpw\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #snmpw=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"snmpw.valid || snmpw.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*SNMP Write is required\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t<br/>\\n    \\t<!-- class=\\\"btn btn-default form-control\\\"-->\\n\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!addform.form.valid\\\" >Add</button>\\n\\t\\t<button type=\\\"reset\\\" class=\\\"btn btn-warning\\\">Clear</button>\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\"><a routerLink=\\\"/allDevice\\\">Cancel</a></button>\\n\\t\\n\\t\\t</form>\\n\\t\\t\\n\\t\\t</div>\\n   \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/device/adddevice/adddevice.component.html\n// module id = 724\n// module chunks = 1","module.exports = \"<!doctype html>\\n<html>\\n\\t<head>\\n\\t\\t<title>HELLO ANGULAR 2</title>\\n\\t</head>\\n\\n\\t<body>\\n\\t\\n\\t<hr>\\n\\t<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\n\\t<table class=\\\"table\\\">\\n\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<th>DEVICE ID</th>\\n\\t\\t\\t\\t<th>IP</th>\\n\\t\\t\\t\\t<th>MAC</th>\\n\\t\\t\\t\\t<th>NAME</th>\\n\\t\\t\\t\\t<th>TYPE</th>\\n\\t\\t\\t\\t<th>VERSION</th>\\n\\t\\t\\t\\t<th>SNMP VERSION</th>\\n\\t\\t\\t\\t<th>SNMP READ</th>\\n\\t\\t\\t\\t<th>SNMP WRITE</th>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<th>\\n\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/addDevice']\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\" aria-label=\\\"Right Align\\\"></span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\n\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let item of allDevices \\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<td>{{item.deviceid}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.ip}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.mac}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.name}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.type}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.version}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.snmpv}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.snmpr}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.snmpw}}</td>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\n\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/editDevice',item.deviceid]\\\">\\t\\t\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<button (click)='deleteDevice(item)'   type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Left Align\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Left Align\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/PortOfIddevice',item.deviceid]\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tPORT OF DEVICE\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t\\t </td>\\n       \\n\\t\\t\\t\\t</tr> \\n\\t\\t\\n\\t\\t</table>\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t</div>\\n\\t</body>\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/device/device.component.html\n// module id = 725\n// module chunks = 1","module.exports = \"\\t<div class=\\\"container\\\">\\n\\t\\t\\n\\t\\t<form (ngSubmit)=\\\"updateDevice(allDevicesId.deviceid)\\\" #addform=\\\"ngForm\\\">\\n      \\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"ip\\\">IP</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allDevicesId.ip\\\"\\n\\t\\t\\tname=\\\"ip\\\" \\n\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"ip\\\"\\n\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\trequired #ip=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"ip.valid || ip.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*IP is required\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"mac\\\">MAC</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allDevicesId.mac\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"mac\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"mac\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #mac=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"mac.valid || mac.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t*Mac is required\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t&nbsp;\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allDevicesId.name\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"name\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"name\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #name=\\\"ngModel\\\">\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"name.valid || name.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t*Name is required\\n\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"type\\\">Type</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allDevicesId.type\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"type\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"type\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #type=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"type.valid || type.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*Type is required\\n\\t\\t\\t\\n\\t\\t</div>\\n    \\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"version\\\">Version</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allDevicesId.version\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"version\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"version\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #version=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"version.valid || version.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*Version is required\\n\\t\\t\\t\\n\\t\\t</div>\\n    \\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"snmpv\\\">SNMP Version</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allDevicesId.snmpv\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"snmpv\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"snmpv\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #snmpv=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"snmpv.valid || snmpv.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*SNMP Version is required\\n\\t\\t\\t\\n\\t\\t</div>\\n    \\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"snmpr\\\">SNMP Read</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allDevicesId.snmpr\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"snmpr\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"snmpr\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #snmpr=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"snmpr.valid || snmpr.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*SNMP Read is required\\n\\t\\t\\t\\n\\t\\t</div>\\n    \\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"snmpw\\\">SNMP Write</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allDevicesId.snmpw\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"snmpw\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"snmpw\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #snmpw=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"snmpw.valid || snmpw.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*SNMP Write is required\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t<br/>\\n    \\t<!-- class=\\\"btn btn-default form-control\\\"-->\\n\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!addform.form.valid\\\" >Update</button>\\n\\t\\t<button type=\\\"reset\\\" class=\\\"btn btn-warning\\\">Clear</button>\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\"><a routerLink=\\\"/allDevice\\\">Cancel</a></button>\\n\\t\\n\\t\\t</form>\\n\\t\\t\\n\\t</div>\\n   \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/device/editdevice/editdevice.component.html\n// module id = 726\n// module chunks = 1","module.exports = \"<!--<p><img src=\\\"../img/Cisco-Systems.png\\\" alt=\\\"Cisco\\\" width=\\\"280\\\" height=\\\"280\\\"/></p>\\n-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 727\n// module chunks = 1","module.exports = \"<!doctype html>\\n<html>\\n\\t<head>\\n\\t\\t<title>HELLO ANGULAR 2</title>\\n\\t</head>\\n\\n\\t<body>\\n\\t\\n\\t<hr>\\n\\t<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\n\\t<table class=\\\"table\\\">\\n\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<th>PORT ID</th>\\n\\t\\t\\t\\t<th>NAME PORT</th>\\n\\t\\t\\t\\t<th>STATUS</th>\\n\\t\\t\\t\\t<th>ID DEVICE</th>\\n\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let item of allPortOfDevice \\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<td>{{item.portid}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.port}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.status}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.iddevice}}</td>\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<button (click)='deletePort(item.portid)'   type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Left Align\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t\\t </td>\\n       \\n       \\n\\t\\t\\t\\t</tr>\\n\\t\\t\\n\\t\\t</table>\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/allPort']\\\">Port Home</a>\\t\\n\\t\\t\\t\\t\\n\\t\\t</button>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/allDevice']\\\">Device Home</a>\\t\\n\\t\\t\\t\\t\\n\\t\\t</button>\\n\\t\\t</div>\\n\\t\\t</div>\\n\\t</body>\\n</html>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/port/port-of-iddevice/port-of-iddevice.component.html\n// module id = 728\n// module chunks = 1","module.exports = \"<!doctype html>\\n<html>\\n\\t<head>\\n\\t\\t<title>HELLO ANGULAR 2</title>\\n\\t</head>\\n\\n\\t<body>\\n\\t\\n\\t<hr>\\n\\t<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\n\\t<table class=\\\"table\\\">\\n\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<th>PORT ID</th>\\n\\t\\t\\t\\t<th>NAME PORT</th>\\n\\t\\t\\t\\t<th>STATUS</th>\\n\\t\\t\\t\\t<th>ID DEVICE</th>\\n\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let item of allPorts \\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<td>{{item.portid}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.port}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.status}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.iddevice}}</td>\\n       \\n\\t\\t\\t\\t</tr>\\n\\t\\t\\n\\t\\t</table>\\n\\t\\t</div>\\n\\t\\t</div>\\n\\t</body>\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/port/port.component.html\n// module id = 729\n// module chunks = 1","module.exports = \"\\t\\t<div class=\\\"container\\\">\\n\\t\\t\\n\\t\\t<form (ngSubmit)=\\\"vlanSubmit()\\\" #addform=\\\"ngForm\\\">\\n\\t\\t<!--\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"vlanId\\\">Vlan Id</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input type=\\\"number\\\" [(ngModel)]=\\\"model.vlanId\\\" \\n\\n\\t\\t\\t\\tname=\\\"vlanId\\\" \\n\\n\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"vlanId\\\"\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\trequired #id=\\\"ngModel\\\">\\n\\t\\t\\t\\n\\t\\t\\t</div> \\n\\t\\t\\t<div [hidden]=\\\"id.valid || id.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t*Vlan Id is required\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t&nbsp;\\n\\t\\t\\t-->\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"vlanNumber\\\">Vlan Number</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input type=\\\"number\\\" [(ngModel)]=\\\"model.vlanNumber\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tname=\\\"vlanNumber\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"vlanNumber\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\trequired #vlanNumber=\\\"ngModel\\\">\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"vlanNumber.valid || vlanNumber.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t*VLAN Number is required\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t&nbsp;\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"vlanDescription\\\">Vlan Description</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"model.vlanDescription\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tname=\\\"vlanDescription\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"vlanDescription\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\trequired #vlanDescription=\\\"ngModel\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"vlanDescription.valid || vlanDescription.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t*VLAN Description is required\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t&nbsp;\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"vlanType\\\">Vlan Type</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"model.vlanType\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tname=\\\"vlantype\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"vlanType\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\trequired #vlanType=\\\"ngModel\\\">\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"vlanType.valid || vlanType.pristine\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t*VLAN Type is required\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t<!--\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t<label for=\\\"power\\\">Status</label>\\n\\t\\t\\t\\n\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"status\\\"\\n\\t\\t\\t\\n\\t\\t\\t[(ngModel)]=\\\"model.Status\\\" name=\\\"status\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired>\\n\\t\\t\\t<option *ngFor=\\\"let s of status\\\" [value]=\\\"s\\\">{{s}}</option>\\n\\t\\t\\t</select>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t-->\\n\\t\\t\\t<br/>\\n\\t\\t\\t\\t<!-- class=\\\"btn btn-default form-control\\\"-->\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!addform.form.valid\\\" >Add</button>\\n\\t\\t\\t\\t<button type=\\\"reset\\\" class=\\\"btn btn-warning\\\">Clear</button>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\"><a routerLink=\\\"/allVlan\\\">Cancel</a></button>\\n\\t\\t\\n\\t\\t</form>\\n\\t\\t\\n\\t\\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/vlan/addvlan/addvlan.component.html\n// module id = 730\n// module chunks = 1","module.exports = \"\\t\\t<div class=\\\"container\\\">\\n\\t\\t\\n\\t\\t<form (ngSubmit)=\\\"updateVlan(allVlansId.vlanid)\\\" #updateform=\\\"ngForm\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"vlanid\\\">Vlan Id</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"number\\\" [(ngModel)]=\\\"allVlansId.vlanid\\\" \\n\\n\\t\\t\\tname=\\\"vlanid\\\" \\n\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"vlanid\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #id=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"id.valid || id.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\n\\t\\t\\t\\t*Vlan Id is required\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"vlannum\\\">Vlan Number</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"number\\\" [(ngModel)]=\\\"allVlansId.vlannum\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"vlannum\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"vlannum\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #vlannum=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"vlannum.valid || vlannum.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t*VLAN Number is required\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t<label for=\\\"vlanDct\\\">Vlan Description</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allVlansId.vlanDct\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"vlanDct\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"vlanDct\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #vlanDct=\\\"ngModel\\\">\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<div [hidden]=\\\"vlanDct.valid || vlanDct.pristine\\\"\\n\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t*VLAN Description is required\\n\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t&nbsp;\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"vlanType\\\">Vlan Type</label>\\n\\t\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"allVlansId.vlanType\\\"\\n\\t\\t\\t\\n\\t\\t\\tname=\\\"vlantype\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"vlanType\\\"\\n\\t\\t\\t\\n\\t\\t\\trequired #vlanType=\\\"ngModel\\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\t<div [hidden]=\\\"vlanType.valid || vlanType.pristine\\\"\\n\\t\\t\\t\\n\\t\\t\\tclass=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t*VLAN Type is required\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<!--\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t<label for=\\\"power\\\">Status</label>\\n\\t\\t\\n\\t\\t<select class=\\\"form-control\\\" id=\\\"status\\\"\\n\\t\\t\\n\\t\\t[(ngModel)]=\\\"model.Status\\\" name=\\\"status\\\"\\n\\t\\t\\n\\t\\trequired>\\n\\t\\t<option *ngFor=\\\"let s of status\\\" [value]=\\\"s\\\">{{s}}</option>\\n\\t\\t</select>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t-->\\n\\t\\t<br/>\\n\\t\\t<!-- class=\\\"btn btn-default form-control\\\"-->\\n\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!updateform.form.valid\\\">Update</button>\\n\\t\\t\\n\\t\\t<button type=\\\"reset\\\" class=\\\"btn btn-warning\\\">Clear</button>\\n\\t\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\"><a [routerLink]=\\\"['/allVlan']\\\">Cancel</a></button>\\n\\t\\t\\n\\t\\t</form>\\n\\t\\t\\n\\t\\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/vlan/editvlan/editvlan.component.html\n// module id = 731\n// module chunks = 1","module.exports = \"<!doctype html>\\n<html>\\n\\t<head>\\n\\t\\t\\n\\t\\t<title>HELLO ANGULAR 2</title>\\n\\t\\n    \\n\\t</head>\\n\\n\\t<body>\\n\\t\\n\\t<hr>\\n\\t<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\n\\t<table class=\\\"table\\\">\\n\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t<th>VLAN ID</th>\\n\\t\\t\\t\\t<th>VLAN NUMBER</th>\\n\\t\\t\\t\\t<th>VLAN DESCRIPTION</th>\\n\\t\\t\\t\\t<th>VLAN TYPE</th>\\n\\t\\t\\t\\t<th>\\n\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/addVlan']\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\" aria-label=\\\"Right Align\\\"></span>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\n\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let item of allVlans \\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<td>{{item.vlanId}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.vlanNumber}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.vlanDescription}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{item.vlanType}}</td>\\n\\t\\t\\t<!--\\t\\t<tr>\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<td>1</td>\\n\\t\\t\\t\\t\\t\\t<td>99</td>\\n\\t\\t\\t\\t\\t\\t<td>vlan 99</td>\\n\\t\\t\\t\\t\\t\\t<td>vlan</td>\\n\\t\\t\\t-->\\t\\n\\t\\t\\t\\t\\t\\t<td>\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/editVlan',item.vlanid]\\\">\\t\\t\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</a>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\n\\n\\n\\t\\t\\t\\t\\t\\t<!--<button (click)='deleteVlan(item)' type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</button>-->\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\n\\t\\t</table>\\n\\t\\t</div>\\n\\t\\t</div>\\n\\t</body>\\n</html>\\n  \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/vlan/vlan.component.html\n// module id = 732\n// module chunks = 1"],"sourceRoot":""}